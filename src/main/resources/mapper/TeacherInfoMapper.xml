<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.TeacherInfoMapper" >
  <resultMap id="BaseResultMap" type="entity.TeacherInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="teacher_no" property="teacherNo" jdbcType="VARCHAR" />
    <result column="teacher_name" property="teacherName" jdbcType="VARCHAR" />
    <result column="teacher_sex" property="teacherSex" jdbcType="CHAR" />
    <result column="moblie" property="moblie" jdbcType="VARCHAR" />
    <result column="teacher_pwd" property="teacherPwd" jdbcType="VARCHAR" />
    <result column="college_id" property="collegeId" jdbcType="VARCHAR" />
    <result column="technical_title" property="technicalTitle" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="extend1" property="extend1" jdbcType="VARCHAR" />
    <result column="extend2" property="extend2" jdbcType="VARCHAR" />
    <result column="extend3" property="extend3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, teacher_no, teacher_name, teacher_sex, moblie, teacher_pwd, college_id, technical_title, 
    create_time, update_time, state, extend1, extend2, extend3
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from teacher_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from teacher_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="entity.TeacherInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into teacher_info (id, teacher_no, teacher_name, 
      teacher_sex, moblie, teacher_pwd, 
      college_id, technical_title, create_time, 
      update_time, state, extend1, 
      extend2, extend3)
    values (#{id,jdbcType=INTEGER}, #{teacherNo,jdbcType=VARCHAR}, #{teacherName,jdbcType=VARCHAR}, 
      #{teacherSex,jdbcType=CHAR}, #{moblie,jdbcType=VARCHAR}, #{teacherPwd,jdbcType=VARCHAR}, 
      #{collegeId,jdbcType=VARCHAR}, #{technicalTitle,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{state,jdbcType=TINYINT}, #{extend1,jdbcType=VARCHAR}, 
      #{extend2,jdbcType=VARCHAR}, #{extend3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="entity.TeacherInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into teacher_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="teacherNo != null" >
        teacher_no,
      </if>
      <if test="teacherName != null" >
        teacher_name,
      </if>
      <if test="teacherSex != null" >
        teacher_sex,
      </if>
      <if test="moblie != null" >
        moblie,
      </if>
      <if test="teacherPwd != null" >
        teacher_pwd,
      </if>
      <if test="collegeId != null" >
        college_id,
      </if>
      <if test="technicalTitle != null" >
        technical_title,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="extend1 != null" >
        extend1,
      </if>
      <if test="extend2 != null" >
        extend2,
      </if>
      <if test="extend3 != null" >
        extend3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=INTEGER},
      <if test="teacherNo != null" >
        #{teacherNo,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null" >
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherSex != null" >
        #{teacherSex,jdbcType=CHAR},
      </if>
      <if test="moblie != null" >
        #{moblie,jdbcType=VARCHAR},
      </if>
      <if test="teacherPwd != null" >
        #{teacherPwd,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null" >
        #{collegeId,jdbcType=VARCHAR},
      </if>
      <if test="technicalTitle != null" >
        #{technicalTitle,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="extend1 != null" >
        #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null" >
        #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="extend3 != null" >
        #{extend3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.TeacherInfo" >
    update teacher_info
    <set >
      <if test="teacherNo != null" >
        teacher_no = #{teacherNo,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null" >
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherSex != null" >
        teacher_sex = #{teacherSex,jdbcType=CHAR},
      </if>
      <if test="moblie != null" >
        moblie = #{moblie,jdbcType=VARCHAR},
      </if>
      <if test="teacherPwd != null" >
        teacher_pwd = #{teacherPwd,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null" >
        college_id = #{collegeId,jdbcType=VARCHAR},
      </if>
      <if test="technicalTitle != null" >
        technical_title = #{technicalTitle,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="extend1 != null" >
        extend1 = #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null" >
        extend2 = #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="extend3 != null" >
        extend3 = #{extend3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.TeacherInfo" >
    update teacher_info
    set teacher_no = #{teacherNo,jdbcType=VARCHAR},
      teacher_name = #{teacherName,jdbcType=VARCHAR},
      teacher_sex = #{teacherSex,jdbcType=CHAR},
      moblie = #{moblie,jdbcType=VARCHAR},
      teacher_pwd = #{teacherPwd,jdbcType=VARCHAR},
      college_id = #{collegeId,jdbcType=VARCHAR},
      technical_title = #{technicalTitle,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=TINYINT},
      extend1 = #{extend1,jdbcType=VARCHAR},
      extend2 = #{extend2,jdbcType=VARCHAR},
      extend3 = #{extend3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
    <!-- 一下为自定义方法 -->
  <select id="listTeacher" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
  	from teacher_info
  	<where>
  		<if test="teacherInfo.teacherNo != null and !&quot;&quot;.equals(teacherInfo.teacherNo.trim())">
  			and teacher_no = #{teacherInfo.teacherNo}
  		</if>
  		<if test="teacherInfo.teacherName != null and !&quot;&quot;.equals(teacherInfo.teacherName.trim())">
  			and teacher_name = #{teacherInfo.teacherName}
  		</if>
  		<if test="teacherInfo.teacherSex != null and !&quot;&quot;.equals(teacherInfo.teacherSex.trim())">
  			and teacher_sex = #{teacherInfo.teacherSex}
  		</if>
  		<if test="teacherInfo.moblie != null and !&quot;&quot;.equals(teacherInfo.moblie.trim())">
  			and moblie = #{teacherInfo.moblie}
  		</if>
  		<if test="teacherInfo.collegeId != null and !&quot;&quot;.equals(teacherInfo.collegeId.trim())">
  			and college_id = #{teacherInfo.collegeId}
  		</if>
  		<if test="teacherInfo.bookAuthor != null and !&quot;&quot;.equals(teacherInfo.bookAuthor.trim())">
  			and state = #{teacherInfo.state}
  		</if>
  	</where>order by id limit #{page.dbIndex},#{page.dbNumber}
  	
  </select>
  
  <select id="selectByParams" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
  	from teacher_info
  	<where>
  		<if test="teacherInfo.teacherNo != null and !&quot;&quot;.equals(teacherInfo.teacherNo.trim())">
  			and teacher_no = #{teacherInfo.teacherNo}
  		</if>
  		<if test="teacherInfo.teacherName != null and !&quot;&quot;.equals(teacherInfo.teacherName.trim())">
  			and teacher_name = #{teacherInfo.teacherName}
  		</if>
  		<if test="teacherInfo.teacherSex != null and !&quot;&quot;.equals(teacherInfo.teacherSex.trim())">
  			and teacher_sex = #{teacherInfo.teacherSex}
  		</if>
  		<if test="teacherInfo.moblie != null and !&quot;&quot;.equals(teacherInfo.moblie.trim())">
  			and moblie = #{teacherInfo.moblie}
  		</if>
  		<if test="teacherInfo.collegeId != null and !&quot;&quot;.equals(teacherInfo.collegeId.trim())">
  			and college_id = #{teacherInfo.collegeId}
  		</if>
  		<if test="teacherInfo.bookAuthor != null and !&quot;&quot;.equals(teacherInfo.bookAuthor.trim())">
  			and state = #{teacherInfo.state}
  		</if>
  	</where>
  	
  </select>
  
  <select id="countTeacher" resultType="int" parameterType="entity.TeacherInfo">
  	select count(*) from teacher_info
  	<where>
  		<if test="teacherInfo.teacherNo != null and !&quot;&quot;.equals(teacherInfo.teacherNo.trim())">
  			and teacher_no = #{teacherInfo.teacherNo}
  		</if>
  		<if test="teacherInfo.teacherName != null and !&quot;&quot;.equals(teacherInfo.teacherName.trim())">
  			and teacher_name = #{teacherInfo.teacherName}
  		</if>
  		<if test="teacherInfo.teacherSex != null and !&quot;&quot;.equals(teacherInfo.teacherSex.trim())">
  			and teacher_sex = #{teacherInfo.teacherSex}
  		</if>
  		<if test="teacherInfo.moblie != null and !&quot;&quot;.equals(teacherInfo.moblie.trim())">
  			and moblie = #{teacherInfo.moblie}
  		</if>
  		<if test="teacherInfo.collegeId != null and !&quot;&quot;.equals(teacherInfo.collegeId.trim())">
  			and college_id = #{teacherInfo.collegeId}
  		</if>
  		<if test="teacherInfo.bookAuthor != null and !&quot;&quot;.equals(teacherInfo.bookAuthor.trim())">
  			and state = #{teacherInfo.state}
  		</if>
  	</where>
  </select>
  
  <insert id="insertTeacherBatch" parameterType="java.util.List">
		  insert into teacher_info (teacher_no,teacher_name,teacher_sex,moblie,teacher_pwd,college_id,technical_title,create_time,update_time,state)
		        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.teacherNo,jdbcType=VARCHAR},
             #{item.teacherName,jdbcType=VARCHAR},
             #{item.teacherSex,jdbcType=VARCHAR},
             #{item.moblie,jdbcType=VARCHAR},
             #{item.teacherPwd,jdbcType=VARCHAR},
             #{item.collegeId,jdbcType=VARCHAR},
             #{item.technicalTitle,jdbcType=VARCHAR},
             #{item.createTime,jdbcType=TIMESTAMP},
             #{item.updateTime,jdbcType=TIMESTAMP},
             #{item.state,jdbcType=TINYINT}
             )
        </foreach>
  </insert>
</mapper>