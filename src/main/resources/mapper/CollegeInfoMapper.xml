<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.CollegeInfoMapper" >
  <resultMap id="BaseResultMap" type="entity.CollegeInfo" >
    <id column="college_id" property="collegeId" jdbcType="VARCHAR" />
    <result column="college_name" property="collegeName" jdbcType="VARCHAR" />
    <result column="college_pwd" property="collegePwd" jdbcType="VARCHAR" />
    <result column="college_principal" property="collegePrincipal" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />	
    <result column="extend1" property="extend1" jdbcType="VARCHAR" />
    <result column="extend2" property="extend2" jdbcType="VARCHAR" />
    <result column="extend3" property="extend3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    college_id, college_name, college_pwd, college_principal, school, create_time, update_time, 
    extend1, extend2, extend3
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from college_info
    where college_id = #{collegeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from college_info
    where college_id = #{collegeId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="entity.CollegeInfo" >
    insert into college_info (college_id, college_name, college_pwd, 
      college_principal, school, create_time, 
      update_time, extend1, extend2, 
      extend3)
    values (#{collegeId,jdbcType=VARCHAR}, #{collegeName,jdbcType=VARCHAR}, #{collegePwd,jdbcType=VARCHAR}, 
      #{collegePrincipal,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{extend1,jdbcType=VARCHAR}, #{extend2,jdbcType=VARCHAR}, 
      #{extend3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="entity.CollegeInfo" >
    insert into college_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="collegeId != null" >
        college_id,
      </if>
      <if test="collegeName != null" >
        college_name,
      </if>
      <if test="collegePwd != null" >
        college_pwd,
      </if>
      <if test="collegePrincipal != null" >
        college_principal,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="extend1 != null" >
        extend1,
      </if>
      <if test="extend2 != null" >
        extend2,
      </if>
      <if test="extend3 != null" >
        extend3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="collegeId != null" >
        #{collegeId,jdbcType=VARCHAR},
      </if>
      <if test="collegeName != null" >
        #{collegeName,jdbcType=VARCHAR},
      </if>
      <if test="collegePwd != null" >
        #{collegePwd,jdbcType=VARCHAR},
      </if>
      <if test="collegePrincipal != null" >
        #{collegePrincipal,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extend1 != null" >
        #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null" >
        #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="extend3 != null" >
        #{extend3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.CollegeInfo" >
    update college_info
    <set >
      <if test="collegeName != null" >
        college_name = #{collegeName,jdbcType=VARCHAR},
      </if>
      <if test="collegePwd != null" >
        college_pwd = #{collegePwd,jdbcType=VARCHAR},
      </if>
      <if test="collegePrincipal != null" >
        college_principal = #{collegePrincipal,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extend1 != null" >
        extend1 = #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null" >
        extend2 = #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="extend3 != null" >
        extend3 = #{extend3,jdbcType=VARCHAR},
      </if>
    </set>
    where college_id = #{collegeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.CollegeInfo" >
    update college_info
    set college_name = #{collegeName,jdbcType=VARCHAR},
      college_pwd = #{collegePwd,jdbcType=VARCHAR},
      college_principal = #{collegePrincipal,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      extend1 = #{extend1,jdbcType=VARCHAR},
      extend2 = #{extend2,jdbcType=VARCHAR},
      extend3 = #{extend3,jdbcType=VARCHAR}
    where college_id = #{collegeId,jdbcType=VARCHAR}
  </update>
  
<!-- 一下为自定义方法 -->
  <select id="listCollege" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
  	from college_info
  	<where>
  		<if test="collegeInfo.collegeName != null and !&quot;&quot;.equals(collegeInfo.collegeName.trim())">
  			and college_name = #{collegeInfo.collegeName}
  		</if>
  		<if test="collegeInfo.collegePrincipal != null and !&quot;&quot;.equals(collegeInfo.collegePrincipal.trim())">
  			and college_principal = #{collegeInfo.collegePrincipal}
  		</if>
  		<if test="collegeInfo.school != null and !&quot;&quot;.equals(collegeInfo.school.trim())">
  			and school = #{collegeInfo.school}
  		</if>
  	</where>order by college_id limit #{page.dbIndex},#{page.dbNumber}
  	
  </select>
  
  <select id="selectByParams" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
  	from college_info
  	<where>
  		<if test="collegeInfo.collegeName != null and !&quot;&quot;.equals(collegeInfo.collegeName.trim())">
  			and college_name = #{collegeInfo.collegeName}
  		</if>
  		<if test="collegeInfo.collegePrincipal != null and !&quot;&quot;.equals(collegeInfo.collegePrincipal.trim())">
  			and college_principal = #{collegeInfo.collegePrincipal}
  		</if>
  		<if test="collegeInfo.school != null and !&quot;&quot;.equals(collegeInfo.school.trim())">
  			and school = #{collegeInfo.school}
  		</if>
  	</where>
  </select>
  
  <select id="countCollege" resultType="int" parameterType="entity.CollegeInfo">
  	select count(*) from college_info
  	<where>
  		<if test="collegeName != null and !&quot;&quot;.equals(collegeName.trim())">
  			and college_name = #{collegeName}
  		</if>
  		<if test="collegePrincipal != null and !&quot;&quot;.equals(collegePrincipal.trim())">
  			and college_principal = #{collegePrincipal}
  		</if>
  		<if test="school != null and !&quot;&quot;.equals(school.trim())">
  			and school = #{school}
  		</if>
  	</where>
  </select>
  
  <insert id="insertCollegeBatch" parameterType="java.util.List">
		  insert into college_info (college_id,college_name,college_pwd,college_principal,school,create_time,update_time)
		        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.collegeId,jdbcType=VARCHAR},
             #{item.collegeName,jdbcType=VARCHAR},
             #{item.collegePwd,jdbcType=VARCHAR},
             #{item.collegePrincipal,jdbcType=VARCHAR},
             #{item.school,jdbcType=VARCHAR},
             #{item.createTime,jdbcType=TIMESTAMP},
             #{item.updateTime,jdbcType=TIMESTAMP}
             )
        </foreach>
  </insert>

   <select id="selectAll" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from college_info
  </select>
</mapper>