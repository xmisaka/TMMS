<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.BookInfoMapper" >
  <resultMap id="BaseResultMap" type="entity.BookInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="book_kind" property="bookKind" jdbcType="VARCHAR" />
    <result column="book_author" property="bookAuthor" jdbcType="VARCHAR" />
    <result column="book_ISBN" property="bookIsbn" jdbcType="VARCHAR" />
    <result column="book_publish" property="bookPublish" jdbcType="VARCHAR" />
    <result column="book_publish_time" property="bookPublishTime" jdbcType="TIMESTAMP" />
    <result column="book_price" property="bookPrice" jdbcType="DECIMAL" />
    <result column="book_intro" property="bookIntro" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="extend1" property="extend1" jdbcType="VARCHAR" />
    <result column="extend2" property="extend2" jdbcType="VARCHAR" />
    <result column="extend3" property="extend3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, book_name, book_kind, book_author, book_ISBN, book_publish, book_publish_time, 
    book_price, book_intro, create_time, update_time, extend1, extend2, extend3
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from book_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="entity.BookInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into book_info (book_name, book_kind, 
      book_author, book_ISBN, book_publish, 
      book_publish_time, book_price, book_intro, 
      create_time, update_time, extend1, 
      extend2, extend3)
    values (#{bookName,jdbcType=VARCHAR}, #{bookKind,jdbcType=VARCHAR}, 
      #{bookAuthor,jdbcType=VARCHAR}, #{bookIsbn,jdbcType=VARCHAR}, #{bookPublish,jdbcType=VARCHAR}, 
      #{bookPublishTime,jdbcType=TIMESTAMP}, #{bookPrice,jdbcType=DECIMAL}, #{bookIntro,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{extend1,jdbcType=VARCHAR}, 
      #{extend2,jdbcType=VARCHAR}, #{extend3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="entity.BookInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into book_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookName != null" >
        book_name,
      </if>
      <if test="bookKind != null" >
        book_kind,
      </if>
      <if test="bookAuthor != null" >
        book_author,
      </if>
      <if test="bookIsbn != null" >
        book_ISBN,
      </if>
      <if test="bookPublish != null" >
        book_publish,
      </if>
      <if test="bookPublishTime != null" >
        book_publish_time,
      </if>
      <if test="bookPrice != null" >
        book_price,
      </if>
      <if test="bookIntro != null" >
        book_intro,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="extend1 != null" >
        extend1,
      </if>
      <if test="extend2 != null" >
        extend2,
      </if>
      <if test="extend3 != null" >
        extend3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookKind != null" >
        #{bookKind,jdbcType=VARCHAR},
      </if>
      <if test="bookAuthor != null" >
        #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookIsbn != null" >
        #{bookIsbn,jdbcType=VARCHAR},
      </if>
      <if test="bookPublish != null" >
        #{bookPublish,jdbcType=VARCHAR},
      </if>
      <if test="bookPublishTime != null" >
        #{bookPublishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookPrice != null" >
        #{bookPrice,jdbcType=DECIMAL},
      </if>
      <if test="bookIntro != null" >
        #{bookIntro,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extend1 != null" >
        #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null" >
        #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="extend3 != null" >
        #{extend3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.BookInfo" >
    update book_info
    <set >
      <if test="bookName != null" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookKind != null" >
        book_kind = #{bookKind,jdbcType=VARCHAR},
      </if>
      <if test="bookAuthor != null" >
        book_author = #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookIsbn != null" >
        book_ISBN = #{bookIsbn,jdbcType=VARCHAR},
      </if>
      <if test="bookPublish != null" >
        book_publish = #{bookPublish,jdbcType=VARCHAR},
      </if>
      <if test="bookPublishTime != null" >
        book_publish_time = #{bookPublishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookPrice != null" >
        book_price = #{bookPrice,jdbcType=DECIMAL},
      </if>
      <if test="bookIntro != null" >
        book_intro = #{bookIntro,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extend1 != null" >
        extend1 = #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null" >
        extend2 = #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="extend3 != null" >
        extend3 = #{extend3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.BookInfo" >
    update book_info
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_kind = #{bookKind,jdbcType=VARCHAR},
      book_author = #{bookAuthor,jdbcType=VARCHAR},
      book_ISBN = #{bookIsbn,jdbcType=VARCHAR},
      book_publish = #{bookPublish,jdbcType=VARCHAR},
      book_publish_time = #{bookPublishTime,jdbcType=TIMESTAMP},
      book_price = #{bookPrice,jdbcType=DECIMAL},
      book_intro = #{bookIntro,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      extend1 = #{extend1,jdbcType=VARCHAR},
      extend2 = #{extend2,jdbcType=VARCHAR},
      extend3 = #{extend3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <!-- 一下为自定义方法 -->
  <select id="listBook" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
  	from book_info
  	<where>
  		<if test="bookInfo.bookIsbn != null and !&quot;&quot;.equals(bookInfo.bookIsbn.trim())">
  			and book_ISBN = #{bookInfo.bookIsbn}
  		</if>
  		<if test="bookInfo.bookName != null and !&quot;&quot;.equals(bookInfo.bookName.trim())">
  			and book_name = #{bookInfo.bookName}
  		</if>
  		<if test="bookInfo.bookPublish != null and !&quot;&quot;.equals(bookInfo.bookPublish.trim())">
  			and book_publish = #{bookInfo.bookPublish}
  		</if>
  		<if test="bookInfo.bookAuthor != null and !&quot;&quot;.equals(bookInfo.bookAuthor.trim())">
  			and book_author = #{bookInfo.bookAuthor}
  		</if>
  	</where>order by id limit #{page.dbIndex},#{page.dbNumber}
  	
  </select>
  
  <select id="selectByParams" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
  	from book_info
  	<where>
  		<if test="bookInfo.bookIsbn != null and !&quot;&quot;.equals(bookInfo.bookIsbn.trim())">
  			and book_ISBN = #{bookInfo.bookIsbn}
  		</if>
  		<if test="bookInfo.bookName != null and !&quot;&quot;.equals(bookInfo.bookName.trim())">
  			and book_name = #{bookInfo.bookName}
  		</if>
  		<if test="bookInfo.bookPublish != null and !&quot;&quot;.equals(bookInfo.bookPublish.trim())">
  			and book_publish = #{bookInfo.bookPublish}
  		</if>
  		<if test="bookInfo.bookAuthor != null and !&quot;&quot;.equals(bookInfo.bookAuthor.trim())">
  			and book_author = #{bookInfo.bookAuthor}
  		</if>
  	</where>
  	
  </select>
  
  <select id="countBook" resultType="int" parameterType="entity.BookInfo">
  	select count(*) from book_info
  	<where>
  		<if test="bookIsbn != null and !&quot;&quot;.equals(bookIsbn.trim())">
  			and book_ISBN = #{bookIsbn}
  		</if>
  		<if test="bookName != null and !&quot;&quot;.equals(bookName.trim())">
  			and book_name = #{bookName}
  		</if>
  		<if test="bookPublish != null and !&quot;&quot;.equals(bookPublish.trim())">
  			and book_publish = #{bookPublish}
  		</if>
  		<if test="bookAuthor != null and !&quot;&quot;.equals(bookAuthor.trim())">
  			and book_author = #{bookAuthor}
  		</if>
  	</where>
  </select>
  
  <insert id="insertBookBatch" parameterType="java.util.List">
		  insert into book_info (book_name,book_kind,book_author,book_ISBN,book_publish,book_publish_time,book_price,book_intro,create_time,update_time)
		        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.bookName,jdbcType=VARCHAR},
             #{item.bookKind,jdbcType=VARCHAR},
             #{item.bookAuthor,jdbcType=VARCHAR},
             #{item.bookIsbn,jdbcType=VARCHAR},
             #{item.bookPublish,jdbcType=VARCHAR},
             #{item.bookPublishTime,jdbcType=TIMESTAMP},
             #{item.bookPrice,jdbcType=DECIMAL},
             #{item.bookIntro,jdbcType=VARCHAR},
             #{item.createTime,jdbcType=TIMESTAMP},
             #{item.updateTime,jdbcType=TIMESTAMP}
             )
        </foreach>
  </insert>
</mapper>